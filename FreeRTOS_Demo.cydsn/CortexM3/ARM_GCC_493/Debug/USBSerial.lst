ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBSerial.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	xDelay
  19              		.section	.rodata
  20              		.align	2
  21              		.type	xDelay, %object
  22              		.size	xDelay, 4
  23              	xDelay:
  24 0000 64000000 		.word	100
  25              		.global	mDelay
  26              		.align	2
  27              		.type	mDelay, %object
  28              		.size	mDelay, 4
  29              	mDelay:
  30 0004 88130000 		.word	5000
  31              		.comm	USBMutex,4,4
  32              		.section	.text.usbserial_putString,"ax",%progbits
  33              		.align	2
  34              		.global	usbserial_putString
  35              		.thumb
  36              		.thumb_func
  37              		.type	usbserial_putString, %function
  38              	usbserial_putString:
  39              	.LFB68:
  40              		.file 1 "USBSerial.c"
   1:USBSerial.c   **** /*
   2:USBSerial.c   ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:USBSerial.c   ****     All rights reserved
   4:USBSerial.c   **** 
   5:USBSerial.c   ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:USBSerial.c   **** 
   7:USBSerial.c   ****     This file is part of the FreeRTOS distribution.
   8:USBSerial.c   **** 
   9:USBSerial.c   ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:USBSerial.c   ****     the terms of the GNU General Public License (version 2) as published by the
  11:USBSerial.c   ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:USBSerial.c   **** 
  13:USBSerial.c   ****     ***************************************************************************
  14:USBSerial.c   ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:USBSerial.c   ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:USBSerial.c   ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:USBSerial.c   ****     >>!   outside of the FreeRTOS kernel.                                   !<<
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 2


  18:USBSerial.c   ****     ***************************************************************************
  19:USBSerial.c   **** 
  20:USBSerial.c   ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:USBSerial.c   ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:USBSerial.c   ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:USBSerial.c   ****     link: http://www.freertos.org/a00114.html
  24:USBSerial.c   **** 
  25:USBSerial.c   ****     ***************************************************************************
  26:USBSerial.c   ****      *                                                                       *
  27:USBSerial.c   ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:USBSerial.c   ****      *    robust, strictly quality controlled, supported, and cross          *
  29:USBSerial.c   ****      *    platform software that is more than just the market leader, it     *
  30:USBSerial.c   ****      *    is the industry's de facto standard.                               *
  31:USBSerial.c   ****      *                                                                       *
  32:USBSerial.c   ****      *    Help yourself get started quickly while simultaneously helping     *
  33:USBSerial.c   ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:USBSerial.c   ****      *    tutorial book, reference manual, or both:                          *
  35:USBSerial.c   ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:USBSerial.c   ****      *                                                                       *
  37:USBSerial.c   ****     ***************************************************************************
  38:USBSerial.c   **** 
  39:USBSerial.c   ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:USBSerial.c   ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:USBSerial.c   ****     defined configASSERT()?
  42:USBSerial.c   **** 
  43:USBSerial.c   ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:USBSerial.c   ****     embedded software for free we request you assist our global community by
  45:USBSerial.c   ****     participating in the support forum.
  46:USBSerial.c   **** 
  47:USBSerial.c   ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:USBSerial.c   ****     be as productive as possible as early as possible.  Now you can receive
  49:USBSerial.c   ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:USBSerial.c   ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:USBSerial.c   **** 
  52:USBSerial.c   ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:USBSerial.c   ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:USBSerial.c   ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:USBSerial.c   **** 
  56:USBSerial.c   ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:USBSerial.c   ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:USBSerial.c   **** 
  59:USBSerial.c   ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:USBSerial.c   ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:USBSerial.c   ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:USBSerial.c   **** 
  63:USBSerial.c   ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:USBSerial.c   ****     engineered and independently SIL3 certified version for use in safety and
  65:USBSerial.c   ****     mission critical applications that require provable dependability.
  66:USBSerial.c   **** 
  67:USBSerial.c   ****     1 tab == 4 spaces!
  68:USBSerial.c   **** */
  69:USBSerial.c   **** 
  70:USBSerial.c   **** /**
  71:USBSerial.c   ****  * This version of flash .c is for use on systems that have limited stack space
  72:USBSerial.c   ****  * and no display facilities.  The complete version can be found in the 
  73:USBSerial.c   ****  * Demo/Common/Full directory.
  74:USBSerial.c   ****  * 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 3


  75:USBSerial.c   ****  * Three tasks are created, each of which flash an LED at a different rate.  The first 
  76:USBSerial.c   ****  * LED flashes every 200ms, the second every 400ms, the third every 600ms.
  77:USBSerial.c   ****  *
  78:USBSerial.c   ****  * The LED flash tasks provide instant visual feedback.  They show that the scheduler 
  79:USBSerial.c   ****  * is still operational.
  80:USBSerial.c   ****  *
  81:USBSerial.c   ****  */
  82:USBSerial.c   **** 
  83:USBSerial.c   **** 
  84:USBSerial.c   **** #include <stdlib.h>
  85:USBSerial.c   **** 
  86:USBSerial.c   **** /* Scheduler include files. */
  87:USBSerial.c   **** #include "FreeRTOS.h"
  88:USBSerial.c   **** #include "task.h"
  89:USBSerial.c   **** #include "semphr.h"
  90:USBSerial.c   **** 
  91:USBSerial.c   **** /* Demo program include files. */
  92:USBSerial.c   **** #include "partest.h"
  93:USBSerial.c   **** #include "USBSerial.h"
  94:USBSerial.c   **** 
  95:USBSerial.c   **** #define USBSerialSTACK_SIZE		configMINIMAL_STACK_SIZE
  96:USBSerial.c   **** const TickType_t xDelay = 100 / portTICK_PERIOD_MS;
  97:USBSerial.c   **** const TickType_t mDelay = 5000 / portTICK_PERIOD_MS;
  98:USBSerial.c   ****     
  99:USBSerial.c   **** /* The task that is created three times. */
 100:USBSerial.c   **** static portTASK_FUNCTION_PROTO( vUSBSerialTask, pvParameters );
 101:USBSerial.c   **** 
 102:USBSerial.c   **** SemaphoreHandle_t USBMutex;
 103:USBSerial.c   **** 
 104:USBSerial.c   **** /*-----------------------------------------------------------*/
 105:USBSerial.c   **** 
 106:USBSerial.c   **** void usbserial_putString(const char msg[])
 107:USBSerial.c   **** {
  41              		.loc 1 107 0
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 8
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45 0000 80B5     		push	{r7, lr}
  46              		.cfi_def_cfa_offset 8
  47              		.cfi_offset 7, -8
  48              		.cfi_offset 14, -4
  49 0002 82B0     		sub	sp, sp, #8
  50              		.cfi_def_cfa_offset 16
  51 0004 00AF     		add	r7, sp, #0
  52              		.cfi_def_cfa_register 7
  53 0006 7860     		str	r0, [r7, #4]
 108:USBSerial.c   ****     if(0 == USBUART_GetConfiguration()) return;
  54              		.loc 1 108 0
  55 0008 FFF7FEFF 		bl	USBUART_GetConfiguration
  56 000c 0346     		mov	r3, r0
  57 000e 002B     		cmp	r3, #0
  58 0010 00D1     		bne	.L2
  59 0012 1DE0     		b	.L1
  60              	.L2:
 109:USBSerial.c   ****     xSemaphoreTake(USBMutex,portMAX_DELAY);
  61              		.loc 1 109 0
  62 0014 104B     		ldr	r3, .L6
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 4


  63 0016 1B68     		ldr	r3, [r3]
  64 0018 1846     		mov	r0, r3
  65 001a 0021     		movs	r1, #0
  66 001c 4FF0FF32 		mov	r2, #-1
  67 0020 0023     		movs	r3, #0
  68 0022 FFF7FEFF 		bl	xQueueGenericReceive
 110:USBSerial.c   ****     while(0 == USBUART_CDCIsReady()) vTaskDelay(xDelay);
  69              		.loc 1 110 0
  70 0026 03E0     		b	.L4
  71              	.L5:
  72              		.loc 1 110 0 is_stmt 0 discriminator 2
  73 0028 6423     		movs	r3, #100
  74 002a 1846     		mov	r0, r3
  75 002c FFF7FEFF 		bl	vTaskDelay
  76              	.L4:
  77              		.loc 1 110 0 discriminator 1
  78 0030 FFF7FEFF 		bl	USBUART_CDCIsReady
  79 0034 0346     		mov	r3, r0
  80 0036 002B     		cmp	r3, #0
  81 0038 F6D0     		beq	.L5
 111:USBSerial.c   ****     USBUART_PutString(msg);
  82              		.loc 1 111 0 is_stmt 1
  83 003a 7868     		ldr	r0, [r7, #4]
  84 003c FFF7FEFF 		bl	USBUART_PutString
 112:USBSerial.c   ****     xSemaphoreGive(USBMutex);
  85              		.loc 1 112 0
  86 0040 054B     		ldr	r3, .L6
  87 0042 1B68     		ldr	r3, [r3]
  88 0044 1846     		mov	r0, r3
  89 0046 0021     		movs	r1, #0
  90 0048 0022     		movs	r2, #0
  91 004a 0023     		movs	r3, #0
  92 004c FFF7FEFF 		bl	xQueueGenericSend
  93              	.L1:
 113:USBSerial.c   **** }
  94              		.loc 1 113 0
  95 0050 0837     		adds	r7, r7, #8
  96              		.cfi_def_cfa_offset 8
  97 0052 BD46     		mov	sp, r7
  98              		.cfi_def_cfa_register 13
  99              		@ sp needed
 100 0054 80BD     		pop	{r7, pc}
 101              	.L7:
 102 0056 00BF     		.align	2
 103              	.L6:
 104 0058 00000000 		.word	USBMutex
 105              		.cfi_endproc
 106              	.LFE68:
 107              		.size	usbserial_putString, .-usbserial_putString
 108              		.section	.rodata
 109              		.align	2
 110              	.LC0:
 111 0008 55534253 		.ascii	"USBSerial\000"
 111      65726961 
 111      6C00
 112 0012 0000     		.section	.text.vStartUSBSerialTasks,"ax",%progbits
 113              		.align	2
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 5


 114              		.global	vStartUSBSerialTasks
 115              		.thumb
 116              		.thumb_func
 117              		.type	vStartUSBSerialTasks, %function
 118              	vStartUSBSerialTasks:
 119              	.LFB69:
 114:USBSerial.c   **** 
 115:USBSerial.c   **** void vStartUSBSerialTasks( UBaseType_t uxPriority )
 116:USBSerial.c   **** {
 120              		.loc 1 116 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 8
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124 0000 80B5     		push	{r7, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 7, -8
 127              		.cfi_offset 14, -4
 128 0002 84B0     		sub	sp, sp, #16
 129              		.cfi_def_cfa_offset 24
 130 0004 02AF     		add	r7, sp, #8
 131              		.cfi_def_cfa 7, 16
 132 0006 7860     		str	r0, [r7, #4]
 117:USBSerial.c   ****     /*Setup the mutex to control port access*/
 118:USBSerial.c   ****     USBMutex = xSemaphoreCreateMutex();
 133              		.loc 1 118 0
 134 0008 0120     		movs	r0, #1
 135 000a FFF7FEFF 		bl	xQueueCreateMutex
 136 000e 0246     		mov	r2, r0
 137 0010 074B     		ldr	r3, .L9
 138 0012 1A60     		str	r2, [r3]
 119:USBSerial.c   **** 	/* Spawn the task. */
 120:USBSerial.c   **** 	xTaskCreate( vUSBSerialTask, "USBSerial", USBSerialSTACK_SIZE, NULL, uxPriority, ( TaskHandle_t * 
 139              		.loc 1 120 0
 140 0014 7B68     		ldr	r3, [r7, #4]
 141 0016 0093     		str	r3, [sp]
 142 0018 0023     		movs	r3, #0
 143 001a 0193     		str	r3, [sp, #4]
 144 001c 0548     		ldr	r0, .L9+4
 145 001e 0649     		ldr	r1, .L9+8
 146 0020 6422     		movs	r2, #100
 147 0022 0023     		movs	r3, #0
 148 0024 FFF7FEFF 		bl	xTaskCreate
 121:USBSerial.c   **** 
 122:USBSerial.c   **** }
 149              		.loc 1 122 0
 150 0028 0837     		adds	r7, r7, #8
 151              		.cfi_def_cfa_offset 8
 152 002a BD46     		mov	sp, r7
 153              		.cfi_def_cfa_register 13
 154              		@ sp needed
 155 002c 80BD     		pop	{r7, pc}
 156              	.L10:
 157 002e 00BF     		.align	2
 158              	.L9:
 159 0030 00000000 		.word	USBMutex
 160 0034 00000000 		.word	vUSBSerialTask
 161 0038 08000000 		.word	.LC0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 6


 162              		.cfi_endproc
 163              	.LFE69:
 164              		.size	vStartUSBSerialTasks, .-vStartUSBSerialTasks
 165              		.section	.text.vUSBSerialTask,"ax",%progbits
 166              		.align	2
 167              		.thumb
 168              		.thumb_func
 169              		.type	vUSBSerialTask, %function
 170              	vUSBSerialTask:
 171              	.LFB70:
 123:USBSerial.c   **** /*-----------------------------------------------------------*/
 124:USBSerial.c   **** 
 125:USBSerial.c   **** static portTASK_FUNCTION( vUSBSerialTask, pvParameters )
 126:USBSerial.c   **** {
 172              		.loc 1 126 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 16
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176 0000 80B5     		push	{r7, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 84B0     		sub	sp, sp, #16
 181              		.cfi_def_cfa_offset 24
 182 0004 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 184 0006 7860     		str	r0, [r7, #4]
 127:USBSerial.c   ****    
 128:USBSerial.c   ****     char disconnected = 1;
 185              		.loc 1 128 0
 186 0008 0123     		movs	r3, #1
 187 000a FB73     		strb	r3, [r7, #15]
 129:USBSerial.c   **** 
 130:USBSerial.c   **** 
 131:USBSerial.c   **** 	/* The parameters are not used. */
 132:USBSerial.c   **** 	( void ) pvParameters;
 133:USBSerial.c   **** 
 134:USBSerial.c   ****     /* Start the USB_UART */
 135:USBSerial.c   ****     /* Start USBFS operation with 5-V operation. */
 136:USBSerial.c   ****     USBUART_Start(0, USBUART_5V_OPERATION);
 188              		.loc 1 136 0
 189 000c 0020     		movs	r0, #0
 190 000e 0121     		movs	r1, #1
 191 0010 FFF7FEFF 		bl	USBUART_Start
 192              	.L14:
 137:USBSerial.c   **** 
 138:USBSerial.c   ****     
 139:USBSerial.c   **** 	for(;;)
 140:USBSerial.c   **** 	{
 141:USBSerial.c   ****         /* Host can send double SET_INTERFACE request. */
 142:USBSerial.c   ****         if (0u != USBUART_IsConfigurationChanged())
 193              		.loc 1 142 0
 194 0014 FFF7FEFF 		bl	USBUART_IsConfigurationChanged
 195 0018 0346     		mov	r3, r0
 196 001a 002B     		cmp	r3, #0
 197 001c 06D0     		beq	.L12
 143:USBSerial.c   ****         {
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 7


 144:USBSerial.c   ****             /* Initialize IN endpoints when device is configured. */
 145:USBSerial.c   ****             if (0u != USBUART_GetConfiguration())
 198              		.loc 1 145 0
 199 001e FFF7FEFF 		bl	USBUART_GetConfiguration
 200 0022 0346     		mov	r3, r0
 201 0024 002B     		cmp	r3, #0
 202 0026 01D0     		beq	.L12
 146:USBSerial.c   ****             {
 147:USBSerial.c   ****                 /* Enumeration is done, enable OUT endpoint to receive data 
 148:USBSerial.c   ****                  * from host. */
 149:USBSerial.c   ****                 USBUART_CDC_Init();
 203              		.loc 1 149 0
 204 0028 FFF7FEFF 		bl	USBUART_CDC_Init
 205              	.L12:
 150:USBSerial.c   ****             }
 151:USBSerial.c   ****         }
 152:USBSerial.c   ****         
 153:USBSerial.c   ****         if(0 != USBUART_GetConfiguration())
 206              		.loc 1 153 0
 207 002c FFF7FEFF 		bl	USBUART_GetConfiguration
 208 0030 0346     		mov	r3, r0
 209 0032 002B     		cmp	r3, #0
 210 0034 04D0     		beq	.L13
 154:USBSerial.c   ****         {
 155:USBSerial.c   ****             /* Get and process inputs here */
 156:USBSerial.c   ****             vTaskDelay(mDelay);
 211              		.loc 1 156 0
 212 0036 41F28833 		movw	r3, #5000
 213 003a 1846     		mov	r0, r3
 214 003c FFF7FEFF 		bl	vTaskDelay
 215              	.L13:
 157:USBSerial.c   ****         }
 158:USBSerial.c   ****         vTaskDelay(xDelay);
 216              		.loc 1 158 0
 217 0040 6423     		movs	r3, #100
 218 0042 1846     		mov	r0, r3
 219 0044 FFF7FEFF 		bl	vTaskDelay
 159:USBSerial.c   **** 	}
 220              		.loc 1 159 0
 221 0048 E4E7     		b	.L14
 222              		.cfi_endproc
 223              	.LFE70:
 224              		.size	vUSBSerialTask, .-vUSBSerialTask
 225 004a 00BF     		.text
 226              	.Letext0:
 227              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 228              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 229              		.file 4 "../../../Source/portable/GCC/ARM_CM3/portmacro.h"
 230              		.file 5 "../../../Source/include/task.h"
 231              		.file 6 "../../../Source/include/queue.h"
 232              		.file 7 "../../../Source/include/semphr.h"
 233              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 234              		.section	.debug_info,"",%progbits
 235              	.Ldebug_info0:
 236 0000 D8010000 		.4byte	0x1d8
 237 0004 0400     		.2byte	0x4
 238 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 8


 239 000a 04       		.byte	0x4
 240 000b 01       		.uleb128 0x1
 241 000c 34000000 		.4byte	.LASF33
 242 0010 01       		.byte	0x1
 243 0011 D7000000 		.4byte	.LASF34
 244 0015 03010000 		.4byte	.LASF35
 245 0019 00000000 		.4byte	.Ldebug_ranges0+0
 246 001d 00000000 		.4byte	0
 247 0021 00000000 		.4byte	.Ldebug_line0
 248 0025 02       		.uleb128 0x2
 249 0026 04       		.byte	0x4
 250 0027 07       		.byte	0x7
 251 0028 DA010000 		.4byte	.LASF0
 252 002c 03       		.uleb128 0x3
 253 002d 04       		.byte	0x4
 254 002e 05       		.byte	0x5
 255 002f 696E7400 		.ascii	"int\000"
 256 0033 02       		.uleb128 0x2
 257 0034 01       		.byte	0x1
 258 0035 06       		.byte	0x6
 259 0036 E9000000 		.4byte	.LASF1
 260 003a 04       		.uleb128 0x4
 261 003b 00000000 		.4byte	.LASF5
 262 003f 02       		.byte	0x2
 263 0040 1D       		.byte	0x1d
 264 0041 45000000 		.4byte	0x45
 265 0045 02       		.uleb128 0x2
 266 0046 01       		.byte	0x1
 267 0047 08       		.byte	0x8
 268 0048 F5000000 		.4byte	.LASF2
 269 004c 02       		.uleb128 0x2
 270 004d 02       		.byte	0x2
 271 004e 05       		.byte	0x5
 272 004f 4D020000 		.4byte	.LASF3
 273 0053 02       		.uleb128 0x2
 274 0054 02       		.byte	0x2
 275 0055 07       		.byte	0x7
 276 0056 7E010000 		.4byte	.LASF4
 277 005a 04       		.uleb128 0x4
 278 005b 15000000 		.4byte	.LASF6
 279 005f 02       		.byte	0x2
 280 0060 3F       		.byte	0x3f
 281 0061 65000000 		.4byte	0x65
 282 0065 02       		.uleb128 0x2
 283 0066 04       		.byte	0x4
 284 0067 05       		.byte	0x5
 285 0068 76020000 		.4byte	.LASF7
 286 006c 04       		.uleb128 0x4
 287 006d B7010000 		.4byte	.LASF8
 288 0071 02       		.byte	0x2
 289 0072 41       		.byte	0x41
 290 0073 77000000 		.4byte	0x77
 291 0077 02       		.uleb128 0x2
 292 0078 04       		.byte	0x4
 293 0079 07       		.byte	0x7
 294 007a 6C010000 		.4byte	.LASF9
 295 007e 02       		.uleb128 0x2
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 9


 296 007f 08       		.byte	0x8
 297 0080 05       		.byte	0x5
 298 0081 2D020000 		.4byte	.LASF10
 299 0085 02       		.uleb128 0x2
 300 0086 08       		.byte	0x8
 301 0087 07       		.byte	0x7
 302 0088 F6010000 		.4byte	.LASF11
 303 008c 02       		.uleb128 0x2
 304 008d 04       		.byte	0x4
 305 008e 07       		.byte	0x7
 306 008f 1D020000 		.4byte	.LASF12
 307 0093 05       		.uleb128 0x5
 308 0094 04       		.byte	0x4
 309 0095 02       		.uleb128 0x2
 310 0096 01       		.byte	0x1
 311 0097 08       		.byte	0x8
 312 0098 3B020000 		.4byte	.LASF13
 313 009c 06       		.uleb128 0x6
 314 009d 04       		.byte	0x4
 315 009e A2000000 		.4byte	0xa2
 316 00a2 07       		.uleb128 0x7
 317 00a3 95000000 		.4byte	0x95
 318 00a7 04       		.uleb128 0x4
 319 00a8 0D020000 		.4byte	.LASF14
 320 00ac 03       		.byte	0x3
 321 00ad 15       		.byte	0x15
 322 00ae 3A000000 		.4byte	0x3a
 323 00b2 04       		.uleb128 0x4
 324 00b3 15020000 		.4byte	.LASF15
 325 00b7 03       		.byte	0x3
 326 00b8 2C       		.byte	0x2c
 327 00b9 5A000000 		.4byte	0x5a
 328 00bd 04       		.uleb128 0x4
 329 00be 6D020000 		.4byte	.LASF16
 330 00c2 03       		.byte	0x3
 331 00c3 2D       		.byte	0x2d
 332 00c4 6C000000 		.4byte	0x6c
 333 00c8 02       		.uleb128 0x2
 334 00c9 04       		.byte	0x4
 335 00ca 04       		.byte	0x4
 336 00cb E3000000 		.4byte	.LASF17
 337 00cf 02       		.uleb128 0x2
 338 00d0 08       		.byte	0x8
 339 00d1 04       		.byte	0x4
 340 00d2 9E010000 		.4byte	.LASF18
 341 00d6 04       		.uleb128 0x4
 342 00d7 9F020000 		.4byte	.LASF19
 343 00db 04       		.byte	0x4
 344 00dc 62       		.byte	0x62
 345 00dd 65000000 		.4byte	0x65
 346 00e1 04       		.uleb128 0x4
 347 00e2 93020000 		.4byte	.LASF20
 348 00e6 04       		.byte	0x4
 349 00e7 63       		.byte	0x63
 350 00e8 77000000 		.4byte	0x77
 351 00ec 04       		.uleb128 0x4
 352 00ed 0A000000 		.4byte	.LASF21
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 10


 353 00f1 04       		.byte	0x4
 354 00f2 69       		.byte	0x69
 355 00f3 BD000000 		.4byte	0xbd
 356 00f7 04       		.uleb128 0x4
 357 00f8 60020000 		.4byte	.LASF22
 358 00fc 05       		.byte	0x5
 359 00fd 67       		.byte	0x67
 360 00fe 93000000 		.4byte	0x93
 361 0102 04       		.uleb128 0x4
 362 0103 C2000000 		.4byte	.LASF23
 363 0107 06       		.byte	0x6
 364 0108 58       		.byte	0x58
 365 0109 93000000 		.4byte	0x93
 366 010d 04       		.uleb128 0x4
 367 010e A5010000 		.4byte	.LASF24
 368 0112 07       		.byte	0x7
 369 0113 4F       		.byte	0x4f
 370 0114 02010000 		.4byte	0x102
 371 0118 08       		.uleb128 0x8
 372 0119 7F020000 		.4byte	.LASF25
 373 011d 01       		.byte	0x1
 374 011e 6A       		.byte	0x6a
 375 011f 00000000 		.4byte	.LFB68
 376 0123 5C000000 		.4byte	.LFE68-.LFB68
 377 0127 01       		.uleb128 0x1
 378 0128 9C       		.byte	0x9c
 379 0129 3C010000 		.4byte	0x13c
 380 012d 09       		.uleb128 0x9
 381 012e 6D736700 		.ascii	"msg\000"
 382 0132 01       		.byte	0x1
 383 0133 6A       		.byte	0x6a
 384 0134 9C000000 		.4byte	0x9c
 385 0138 02       		.uleb128 0x2
 386 0139 91       		.byte	0x91
 387 013a 74       		.sleb128 -12
 388 013b 00       		.byte	0
 389 013c 08       		.uleb128 0x8
 390 013d 1F000000 		.4byte	.LASF26
 391 0141 01       		.byte	0x1
 392 0142 73       		.byte	0x73
 393 0143 00000000 		.4byte	.LFB69
 394 0147 3C000000 		.4byte	.LFE69-.LFB69
 395 014b 01       		.uleb128 0x1
 396 014c 9C       		.byte	0x9c
 397 014d 60010000 		.4byte	0x160
 398 0151 0A       		.uleb128 0xa
 399 0152 CF010000 		.4byte	.LASF27
 400 0156 01       		.byte	0x1
 401 0157 73       		.byte	0x73
 402 0158 E1000000 		.4byte	0xe1
 403 015c 02       		.uleb128 0x2
 404 015d 91       		.byte	0x91
 405 015e 74       		.sleb128 -12
 406 015f 00       		.byte	0
 407 0160 0B       		.uleb128 0xb
 408 0161 E7010000 		.4byte	.LASF36
 409 0165 01       		.byte	0x1
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 11


 410 0166 7D       		.byte	0x7d
 411 0167 00000000 		.4byte	.LFB70
 412 016b 4A000000 		.4byte	.LFE70-.LFB70
 413 016f 01       		.uleb128 0x1
 414 0170 9C       		.byte	0x9c
 415 0171 92010000 		.4byte	0x192
 416 0175 0A       		.uleb128 0xa
 417 0176 40020000 		.4byte	.LASF28
 418 017a 01       		.byte	0x1
 419 017b 7D       		.byte	0x7d
 420 017c 93000000 		.4byte	0x93
 421 0180 02       		.uleb128 0x2
 422 0181 91       		.byte	0x91
 423 0182 6C       		.sleb128 -20
 424 0183 0C       		.uleb128 0xc
 425 0184 C2010000 		.4byte	.LASF37
 426 0188 01       		.byte	0x1
 427 0189 80       		.byte	0x80
 428 018a 95000000 		.4byte	0x95
 429 018e 02       		.uleb128 0x2
 430 018f 91       		.byte	0x91
 431 0190 77       		.sleb128 -9
 432 0191 00       		.byte	0
 433 0192 0D       		.uleb128 0xd
 434 0193 91010000 		.4byte	.LASF29
 435 0197 08       		.byte	0x8
 436 0198 9606     		.2byte	0x696
 437 019a 9E010000 		.4byte	0x19e
 438 019e 0E       		.uleb128 0xe
 439 019f B2000000 		.4byte	0xb2
 440 01a3 0F       		.uleb128 0xf
 441 01a4 26020000 		.4byte	.LASF30
 442 01a8 01       		.byte	0x1
 443 01a9 60       		.byte	0x60
 444 01aa B4010000 		.4byte	0x1b4
 445 01ae 05       		.uleb128 0x5
 446 01af 03       		.byte	0x3
 447 01b0 00000000 		.4byte	xDelay
 448 01b4 07       		.uleb128 0x7
 449 01b5 EC000000 		.4byte	0xec
 450 01b9 0F       		.uleb128 0xf
 451 01ba D0000000 		.4byte	.LASF31
 452 01be 01       		.byte	0x1
 453 01bf 61       		.byte	0x61
 454 01c0 B4010000 		.4byte	0x1b4
 455 01c4 05       		.uleb128 0x5
 456 01c5 03       		.byte	0x3
 457 01c6 00000000 		.4byte	mDelay
 458 01ca 0F       		.uleb128 0xf
 459 01cb 57020000 		.4byte	.LASF32
 460 01cf 01       		.byte	0x1
 461 01d0 66       		.byte	0x66
 462 01d1 0D010000 		.4byte	0x10d
 463 01d5 05       		.uleb128 0x5
 464 01d6 03       		.byte	0x3
 465 01d7 00000000 		.4byte	USBMutex
 466 01db 00       		.byte	0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 12


 467              		.section	.debug_abbrev,"",%progbits
 468              	.Ldebug_abbrev0:
 469 0000 01       		.uleb128 0x1
 470 0001 11       		.uleb128 0x11
 471 0002 01       		.byte	0x1
 472 0003 25       		.uleb128 0x25
 473 0004 0E       		.uleb128 0xe
 474 0005 13       		.uleb128 0x13
 475 0006 0B       		.uleb128 0xb
 476 0007 03       		.uleb128 0x3
 477 0008 0E       		.uleb128 0xe
 478 0009 1B       		.uleb128 0x1b
 479 000a 0E       		.uleb128 0xe
 480 000b 55       		.uleb128 0x55
 481 000c 17       		.uleb128 0x17
 482 000d 11       		.uleb128 0x11
 483 000e 01       		.uleb128 0x1
 484 000f 10       		.uleb128 0x10
 485 0010 17       		.uleb128 0x17
 486 0011 00       		.byte	0
 487 0012 00       		.byte	0
 488 0013 02       		.uleb128 0x2
 489 0014 24       		.uleb128 0x24
 490 0015 00       		.byte	0
 491 0016 0B       		.uleb128 0xb
 492 0017 0B       		.uleb128 0xb
 493 0018 3E       		.uleb128 0x3e
 494 0019 0B       		.uleb128 0xb
 495 001a 03       		.uleb128 0x3
 496 001b 0E       		.uleb128 0xe
 497 001c 00       		.byte	0
 498 001d 00       		.byte	0
 499 001e 03       		.uleb128 0x3
 500 001f 24       		.uleb128 0x24
 501 0020 00       		.byte	0
 502 0021 0B       		.uleb128 0xb
 503 0022 0B       		.uleb128 0xb
 504 0023 3E       		.uleb128 0x3e
 505 0024 0B       		.uleb128 0xb
 506 0025 03       		.uleb128 0x3
 507 0026 08       		.uleb128 0x8
 508 0027 00       		.byte	0
 509 0028 00       		.byte	0
 510 0029 04       		.uleb128 0x4
 511 002a 16       		.uleb128 0x16
 512 002b 00       		.byte	0
 513 002c 03       		.uleb128 0x3
 514 002d 0E       		.uleb128 0xe
 515 002e 3A       		.uleb128 0x3a
 516 002f 0B       		.uleb128 0xb
 517 0030 3B       		.uleb128 0x3b
 518 0031 0B       		.uleb128 0xb
 519 0032 49       		.uleb128 0x49
 520 0033 13       		.uleb128 0x13
 521 0034 00       		.byte	0
 522 0035 00       		.byte	0
 523 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 13


 524 0037 0F       		.uleb128 0xf
 525 0038 00       		.byte	0
 526 0039 0B       		.uleb128 0xb
 527 003a 0B       		.uleb128 0xb
 528 003b 00       		.byte	0
 529 003c 00       		.byte	0
 530 003d 06       		.uleb128 0x6
 531 003e 0F       		.uleb128 0xf
 532 003f 00       		.byte	0
 533 0040 0B       		.uleb128 0xb
 534 0041 0B       		.uleb128 0xb
 535 0042 49       		.uleb128 0x49
 536 0043 13       		.uleb128 0x13
 537 0044 00       		.byte	0
 538 0045 00       		.byte	0
 539 0046 07       		.uleb128 0x7
 540 0047 26       		.uleb128 0x26
 541 0048 00       		.byte	0
 542 0049 49       		.uleb128 0x49
 543 004a 13       		.uleb128 0x13
 544 004b 00       		.byte	0
 545 004c 00       		.byte	0
 546 004d 08       		.uleb128 0x8
 547 004e 2E       		.uleb128 0x2e
 548 004f 01       		.byte	0x1
 549 0050 3F       		.uleb128 0x3f
 550 0051 19       		.uleb128 0x19
 551 0052 03       		.uleb128 0x3
 552 0053 0E       		.uleb128 0xe
 553 0054 3A       		.uleb128 0x3a
 554 0055 0B       		.uleb128 0xb
 555 0056 3B       		.uleb128 0x3b
 556 0057 0B       		.uleb128 0xb
 557 0058 27       		.uleb128 0x27
 558 0059 19       		.uleb128 0x19
 559 005a 11       		.uleb128 0x11
 560 005b 01       		.uleb128 0x1
 561 005c 12       		.uleb128 0x12
 562 005d 06       		.uleb128 0x6
 563 005e 40       		.uleb128 0x40
 564 005f 18       		.uleb128 0x18
 565 0060 9642     		.uleb128 0x2116
 566 0062 19       		.uleb128 0x19
 567 0063 01       		.uleb128 0x1
 568 0064 13       		.uleb128 0x13
 569 0065 00       		.byte	0
 570 0066 00       		.byte	0
 571 0067 09       		.uleb128 0x9
 572 0068 05       		.uleb128 0x5
 573 0069 00       		.byte	0
 574 006a 03       		.uleb128 0x3
 575 006b 08       		.uleb128 0x8
 576 006c 3A       		.uleb128 0x3a
 577 006d 0B       		.uleb128 0xb
 578 006e 3B       		.uleb128 0x3b
 579 006f 0B       		.uleb128 0xb
 580 0070 49       		.uleb128 0x49
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 14


 581 0071 13       		.uleb128 0x13
 582 0072 02       		.uleb128 0x2
 583 0073 18       		.uleb128 0x18
 584 0074 00       		.byte	0
 585 0075 00       		.byte	0
 586 0076 0A       		.uleb128 0xa
 587 0077 05       		.uleb128 0x5
 588 0078 00       		.byte	0
 589 0079 03       		.uleb128 0x3
 590 007a 0E       		.uleb128 0xe
 591 007b 3A       		.uleb128 0x3a
 592 007c 0B       		.uleb128 0xb
 593 007d 3B       		.uleb128 0x3b
 594 007e 0B       		.uleb128 0xb
 595 007f 49       		.uleb128 0x49
 596 0080 13       		.uleb128 0x13
 597 0081 02       		.uleb128 0x2
 598 0082 18       		.uleb128 0x18
 599 0083 00       		.byte	0
 600 0084 00       		.byte	0
 601 0085 0B       		.uleb128 0xb
 602 0086 2E       		.uleb128 0x2e
 603 0087 01       		.byte	0x1
 604 0088 03       		.uleb128 0x3
 605 0089 0E       		.uleb128 0xe
 606 008a 3A       		.uleb128 0x3a
 607 008b 0B       		.uleb128 0xb
 608 008c 3B       		.uleb128 0x3b
 609 008d 0B       		.uleb128 0xb
 610 008e 27       		.uleb128 0x27
 611 008f 19       		.uleb128 0x19
 612 0090 11       		.uleb128 0x11
 613 0091 01       		.uleb128 0x1
 614 0092 12       		.uleb128 0x12
 615 0093 06       		.uleb128 0x6
 616 0094 40       		.uleb128 0x40
 617 0095 18       		.uleb128 0x18
 618 0096 9642     		.uleb128 0x2116
 619 0098 19       		.uleb128 0x19
 620 0099 01       		.uleb128 0x1
 621 009a 13       		.uleb128 0x13
 622 009b 00       		.byte	0
 623 009c 00       		.byte	0
 624 009d 0C       		.uleb128 0xc
 625 009e 34       		.uleb128 0x34
 626 009f 00       		.byte	0
 627 00a0 03       		.uleb128 0x3
 628 00a1 0E       		.uleb128 0xe
 629 00a2 3A       		.uleb128 0x3a
 630 00a3 0B       		.uleb128 0xb
 631 00a4 3B       		.uleb128 0x3b
 632 00a5 0B       		.uleb128 0xb
 633 00a6 49       		.uleb128 0x49
 634 00a7 13       		.uleb128 0x13
 635 00a8 02       		.uleb128 0x2
 636 00a9 18       		.uleb128 0x18
 637 00aa 00       		.byte	0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 15


 638 00ab 00       		.byte	0
 639 00ac 0D       		.uleb128 0xd
 640 00ad 34       		.uleb128 0x34
 641 00ae 00       		.byte	0
 642 00af 03       		.uleb128 0x3
 643 00b0 0E       		.uleb128 0xe
 644 00b1 3A       		.uleb128 0x3a
 645 00b2 0B       		.uleb128 0xb
 646 00b3 3B       		.uleb128 0x3b
 647 00b4 05       		.uleb128 0x5
 648 00b5 49       		.uleb128 0x49
 649 00b6 13       		.uleb128 0x13
 650 00b7 3F       		.uleb128 0x3f
 651 00b8 19       		.uleb128 0x19
 652 00b9 3C       		.uleb128 0x3c
 653 00ba 19       		.uleb128 0x19
 654 00bb 00       		.byte	0
 655 00bc 00       		.byte	0
 656 00bd 0E       		.uleb128 0xe
 657 00be 35       		.uleb128 0x35
 658 00bf 00       		.byte	0
 659 00c0 49       		.uleb128 0x49
 660 00c1 13       		.uleb128 0x13
 661 00c2 00       		.byte	0
 662 00c3 00       		.byte	0
 663 00c4 0F       		.uleb128 0xf
 664 00c5 34       		.uleb128 0x34
 665 00c6 00       		.byte	0
 666 00c7 03       		.uleb128 0x3
 667 00c8 0E       		.uleb128 0xe
 668 00c9 3A       		.uleb128 0x3a
 669 00ca 0B       		.uleb128 0xb
 670 00cb 3B       		.uleb128 0x3b
 671 00cc 0B       		.uleb128 0xb
 672 00cd 49       		.uleb128 0x49
 673 00ce 13       		.uleb128 0x13
 674 00cf 3F       		.uleb128 0x3f
 675 00d0 19       		.uleb128 0x19
 676 00d1 02       		.uleb128 0x2
 677 00d2 18       		.uleb128 0x18
 678 00d3 00       		.byte	0
 679 00d4 00       		.byte	0
 680 00d5 00       		.byte	0
 681              		.section	.debug_aranges,"",%progbits
 682 0000 2C000000 		.4byte	0x2c
 683 0004 0200     		.2byte	0x2
 684 0006 00000000 		.4byte	.Ldebug_info0
 685 000a 04       		.byte	0x4
 686 000b 00       		.byte	0
 687 000c 0000     		.2byte	0
 688 000e 0000     		.2byte	0
 689 0010 00000000 		.4byte	.LFB68
 690 0014 5C000000 		.4byte	.LFE68-.LFB68
 691 0018 00000000 		.4byte	.LFB69
 692 001c 3C000000 		.4byte	.LFE69-.LFB69
 693 0020 00000000 		.4byte	.LFB70
 694 0024 4A000000 		.4byte	.LFE70-.LFB70
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 16


 695 0028 00000000 		.4byte	0
 696 002c 00000000 		.4byte	0
 697              		.section	.debug_ranges,"",%progbits
 698              	.Ldebug_ranges0:
 699 0000 00000000 		.4byte	.LFB68
 700 0004 5C000000 		.4byte	.LFE68
 701 0008 00000000 		.4byte	.LFB69
 702 000c 3C000000 		.4byte	.LFE69
 703 0010 00000000 		.4byte	.LFB70
 704 0014 4A000000 		.4byte	.LFE70
 705 0018 00000000 		.4byte	0
 706 001c 00000000 		.4byte	0
 707              		.section	.debug_line,"",%progbits
 708              	.Ldebug_line0:
 709 0000 00020000 		.section	.debug_str,"MS",%progbits,1
 709      0200AC01 
 709      00000201 
 709      FB0E0D00 
 709      01010101 
 710              	.LASF5:
 711 0000 5F5F7569 		.ascii	"__uint8_t\000"
 711      6E74385F 
 711      7400
 712              	.LASF21:
 713 000a 5469636B 		.ascii	"TickType_t\000"
 713      54797065 
 713      5F7400
 714              	.LASF6:
 715 0015 5F5F696E 		.ascii	"__int32_t\000"
 715      7433325F 
 715      7400
 716              	.LASF26:
 717 001f 76537461 		.ascii	"vStartUSBSerialTasks\000"
 717      72745553 
 717      42536572 
 717      69616C54 
 717      61736B73 
 718              	.LASF33:
 719 0034 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 719      4320342E 
 719      392E3320 
 719      32303135 
 719      30333033 
 720 0067 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 720      20726576 
 720      6973696F 
 720      6E203232 
 720      31323230 
 721 009a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 721      66756E63 
 721      74696F6E 
 721      2D736563 
 721      74696F6E 
 722              	.LASF23:
 723 00c2 51756575 		.ascii	"QueueHandle_t\000"
 723      6548616E 
 723      646C655F 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 17


 723      7400
 724              	.LASF31:
 725 00d0 6D44656C 		.ascii	"mDelay\000"
 725      617900
 726              	.LASF34:
 727 00d7 55534253 		.ascii	"USBSerial.c\000"
 727      65726961 
 727      6C2E6300 
 728              	.LASF17:
 729 00e3 666C6F61 		.ascii	"float\000"
 729      7400
 730              	.LASF1:
 731 00e9 7369676E 		.ascii	"signed char\000"
 731      65642063 
 731      68617200 
 732              	.LASF2:
 733 00f5 756E7369 		.ascii	"unsigned char\000"
 733      676E6564 
 733      20636861 
 733      7200
 734              	.LASF35:
 735 0103 433A5C55 		.ascii	"C:\\Users\\bmt\\Downloads\\FreeRTOSv9.0.0\\FreeRTOS"
 735      73657273 
 735      5C626D74 
 735      5C446F77 
 735      6E6C6F61 
 736 0131 5C44656D 		.ascii	"\\Demo\\CORTEX_CY8C5588_PSoC_Creator_GCC\\FreeRTOS_"
 736      6F5C434F 
 736      52544558 
 736      5F435938 
 736      43353538 
 737 0161 44656D6F 		.ascii	"Demo.cydsn\000"
 737      2E637964 
 737      736E00
 738              	.LASF9:
 739 016c 6C6F6E67 		.ascii	"long unsigned int\000"
 739      20756E73 
 739      69676E65 
 739      6420696E 
 739      7400
 740              	.LASF4:
 741 017e 73686F72 		.ascii	"short unsigned int\000"
 741      7420756E 
 741      7369676E 
 741      65642069 
 741      6E7400
 742              	.LASF29:
 743 0191 49544D5F 		.ascii	"ITM_RxBuffer\000"
 743      52784275 
 743      66666572 
 743      00
 744              	.LASF18:
 745 019e 646F7562 		.ascii	"double\000"
 745      6C6500
 746              	.LASF24:
 747 01a5 53656D61 		.ascii	"SemaphoreHandle_t\000"
 747      70686F72 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 18


 747      6548616E 
 747      646C655F 
 747      7400
 748              	.LASF8:
 749 01b7 5F5F7569 		.ascii	"__uint32_t\000"
 749      6E743332 
 749      5F7400
 750              	.LASF37:
 751 01c2 64697363 		.ascii	"disconnected\000"
 751      6F6E6E65 
 751      63746564 
 751      00
 752              	.LASF27:
 753 01cf 75785072 		.ascii	"uxPriority\000"
 753      696F7269 
 753      747900
 754              	.LASF0:
 755 01da 756E7369 		.ascii	"unsigned int\000"
 755      676E6564 
 755      20696E74 
 755      00
 756              	.LASF36:
 757 01e7 76555342 		.ascii	"vUSBSerialTask\000"
 757      53657269 
 757      616C5461 
 757      736B00
 758              	.LASF11:
 759 01f6 6C6F6E67 		.ascii	"long long unsigned int\000"
 759      206C6F6E 
 759      6720756E 
 759      7369676E 
 759      65642069 
 760              	.LASF14:
 761 020d 75696E74 		.ascii	"uint8_t\000"
 761      385F7400 
 762              	.LASF15:
 763 0215 696E7433 		.ascii	"int32_t\000"
 763      325F7400 
 764              	.LASF12:
 765 021d 73697A65 		.ascii	"sizetype\000"
 765      74797065 
 765      00
 766              	.LASF30:
 767 0226 7844656C 		.ascii	"xDelay\000"
 767      617900
 768              	.LASF10:
 769 022d 6C6F6E67 		.ascii	"long long int\000"
 769      206C6F6E 
 769      6720696E 
 769      7400
 770              	.LASF13:
 771 023b 63686172 		.ascii	"char\000"
 771      00
 772              	.LASF28:
 773 0240 70765061 		.ascii	"pvParameters\000"
 773      72616D65 
 773      74657273 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccasArF1.s 			page 19


 773      00
 774              	.LASF3:
 775 024d 73686F72 		.ascii	"short int\000"
 775      7420696E 
 775      7400
 776              	.LASF32:
 777 0257 5553424D 		.ascii	"USBMutex\000"
 777      75746578 
 777      00
 778              	.LASF22:
 779 0260 5461736B 		.ascii	"TaskHandle_t\000"
 779      48616E64 
 779      6C655F74 
 779      00
 780              	.LASF16:
 781 026d 75696E74 		.ascii	"uint32_t\000"
 781      33325F74 
 781      00
 782              	.LASF7:
 783 0276 6C6F6E67 		.ascii	"long int\000"
 783      20696E74 
 783      00
 784              	.LASF25:
 785 027f 75736273 		.ascii	"usbserial_putString\000"
 785      65726961 
 785      6C5F7075 
 785      74537472 
 785      696E6700 
 786              	.LASF20:
 787 0293 55426173 		.ascii	"UBaseType_t\000"
 787      65547970 
 787      655F7400 
 788              	.LASF19:
 789 029f 42617365 		.ascii	"BaseType_t\000"
 789      54797065 
 789      5F7400
 790              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
